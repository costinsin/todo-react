{"version":3,"sources":["components/TodoEntry.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoEntry","props","className","item","onClick","onRemoval","i","Todo","useState","list","setList","handleRemoval","aux","slice","splice","useEffect","console","log","onSubmit","event","preventDefault","concat","target","value","document","getElementById","reset","autoComplete","id","type","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kRAYeA,MATf,SAAmBC,GACf,OACI,sBAAKC,UAAW,QAAhB,UACI,mBAAGA,UAAW,OAAd,SAAuBD,EAAME,OAC7B,wBAAQD,UAAW,gBAAiBE,QAASH,EAAMI,UAAnD,sBAF0BJ,EAAMK,ICoC7BC,MArCf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQIC,EAAgB,SAACL,GACjB,OAAO,WACH,IAAIM,EAAMH,EAAKI,QACfD,EAAIE,OAAOR,EAAG,GACdI,EAAQE,KAUhB,OAFAG,qBAAU,WAAOC,QAAQC,IAAI,yBAAyB,CAACR,IAGnD,gCACI,0CACA,sBAAMS,SAvBG,SAACC,GACdA,EAAMC,iBACNV,EAAQD,EAAKY,OAAO,CAACF,EAAMG,OAAO,GAAGC,SACrCC,SAASC,eAAe,aAAaC,SAoBLC,aAAc,MAAOC,GAAI,YAArD,SACI,uBAAOC,KAAM,OAAQ3B,UAAW,gBAEpC,qBAAK0B,GAAI,YAAT,SACKnB,EAAKqB,KAAI,SAAC3B,EAAMG,GAAP,OAAa,cAAC,EAAD,CAAWA,EAAGA,EAAGH,KAAMA,EAAME,UAAWM,EAAcL,UAEjF,wBAAQF,QAfA,WACZM,EAAQ,KAcJ,4BCzBGqB,MARf,WACI,OACI,qBAAK7B,UAAU,MAAf,SACI,cAAC,EAAD,OCMG8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.6755e3de.chunk.js","sourcesContent":["import './TodoEntry.css';\r\nimport React from \"react\";\r\n\r\nfunction TodoEntry(props) {\r\n    return (\r\n        <div className={\"entry\"} key={props.i}>\r\n            <p className={\"text\"}>{props.item}</p>\r\n            <button className={\"remove-button\"} onClick={props.onRemoval}>Remove</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoEntry;","import './Todo.css';\r\nimport TodoEntry from './TodoEntry.js';\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nfunction Todo() {\r\n    const [list, setList] = useState([]);\r\n\r\n    let updateList = (event) => {\r\n        event.preventDefault();\r\n        setList(list.concat([event.target[0].value]));\r\n        document.getElementById(\"todo-form\").reset();\r\n    }\r\n\r\n    let handleRemoval = (i) => {\r\n        return () => {\r\n            let aux = list.slice();\r\n            aux.splice(i, 1);\r\n            setList(aux);\r\n        }\r\n    }\r\n\r\n    let clearList = () => {\r\n        setList([]);\r\n    }\r\n\r\n    useEffect(() => {console.log(\"Reloaded component!\")}, [list])\r\n\r\n    return (\r\n        <div>\r\n            <h2>TODO App</h2>\r\n            <form onSubmit={updateList} autoComplete={\"off\"} id={\"todo-form\"}>\r\n                <input type={\"text\"} className={\"todo-task\"} />\r\n            </form>\r\n            <div id={\"todo-list\"}>\r\n                {list.map((item, i) => <TodoEntry i={i} item={item} onRemoval={handleRemoval(i)}/>)}\r\n            </div>\r\n            <button onClick={clearList}>Clear list</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import './App.css';\nimport Todo from \"./components/Todo\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Todo/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}